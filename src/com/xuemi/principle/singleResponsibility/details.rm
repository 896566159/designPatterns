单一职责原则：
一个类只负责一个职责。
若类A负责两个不同的职责：职责1和职责2，当职责1变更时引起了职责2的错误，则应该类A拆分成A1类和A2类


细节：
降低类的复杂度，一个类只负责一项职责
提高可读性，可维护性
降低代码变更引起的风险
通常情况下，应该遵循单一原则，只有在逻辑特别简单的情况下才可以在代码级别违反单一职责原则：即只有类中的方法足够少时，可以在代码级别违反单一职责原则