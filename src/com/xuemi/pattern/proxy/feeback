代理模式（proxy pattern）：
1）为一个对象（被代理）提供一个替身（代理对象），通过替身控制对被代理对象的访问。即：通过 代理对象访问被代理对象，
   好处是可以在被代理对象的方法操作基础上，增强额外的功能操作，达到对被代理对象功能的扩展
2）被代理的对象可以是远程对象、创建开销大的对象、需要全控制的对象等
3）分为三种：
    - 静态代理
    - 动态代理（jdk代理、接口代理）
    - Cglib代理

几种常见的代理模式介绍— 几种变体
1) 防火墙代理：内网通过代理穿透防火墙，实现对公网的访问。
2) 缓存代理：例如：当请求图片文件等资源时，先到缓存代理取，如果取到资源则ok,如果取不到资源，再到公网或者数据库取，然后缓存。
3) 远程代理：远程对象的本地代表，通过它可以把远程对象当本地对象来调用。远程代理通过网络和真正的远程对象沟通信息。
4) 同步代理：主要使用在多线程编程中，完成多线程间同步工作