享元模式（蝇量模式，flyweight pattern）：
1）运用共享技术支持大量细粒度对象的共享
2）常用于系统底层开发，解决系统的性能问题。享元模式能够解决 重复对象的内存浪费问题，当系统中有大量相似对象，需要缓冲池时。不需要总是创建新
   的对象，二是从池中直接获取。这样可以降低系统内存消耗，同时提高效率。
4）典例：
    - 池技术方面：String常量池、数据库共连接池、缓冲池
5）享元模式提出两个要求：细粒度和共享对象。
    ①内部状态：对象共享出来的信息，存储在享元对象内部，且不会随环境的改变而改变。
    ②外部状态：对象得以 依赖（使用） 的一个标记，随着环境改变而改变、不可共享的状态。
   例如：围棋棋盘上有361个位置可以放置围棋棋子。如果每个位置的棋子都创建，则每盘棋都有两三百个棋子对象产生，堆内存的耗费很大。
        用享元模式来设计：将棋子的颜色（黑白）作为 内部状态，那么棋子对应的对象只有两个，而将棋子的位置作为 外部状态，这样可大大降低内存使用