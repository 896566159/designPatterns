克隆羊问题：
克隆羊：根据一个Sheep对象来创建出和当前Sheep属性值一模一样的新Sheep对象
原始方案：根据已有的Sheep对象的getXxx()方法来设置新对象的属性值，从而保证被新创建的对象和原对象属性一样
原始方案优缺点分析：
    优点：1）简单，便于理解
    缺点：1）当Sheep类（即被复制的类）的属性比较多的时候，需要修改的代码多
         2）违背了OCP原则，即当Sheep类中新增了属性是，也需要在Client类中对新属性修改克隆代码

改进方案：
    Object基类中有一个Clone()方法，可以复制出新的类对象。但类需要实现Cloneable接口，实现改接口中的Clone方法。
    上述的这种克隆方案即 原型设计模式

原型设计模式：用原型实例 指定 创建对象的种类，并通过 拷贝这些原型，创建新的对象
            其允许一个对象再创建另一个可制定的对象，而无需要指导如何创建的细节
工作原理：
将一个 原型对象 传给即将 被创建的对象，这个 将被创建的对象 通过 请求 原型对象 来拷贝它(原型对象)的属性 来赋值给自己(将被创建的对象)，即： 对象.clone()

UML图：
    一个类，实现Cloneable接口，重写clone()方法，该类即：原型类



